mixin jobForm(job = {})
  form(action=`/addJob/${job._id || ''}` method="POST" class="card")
    label(for="jobName") Name
    input(class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:shadow-outline focus:bg-white shadow-lx" type="text" name="jobName" value=job.jobName)
    label(for="jobClient") Client
    select(class="block appearance-none w-full bg-gray-200 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline" name="jobClient" placeholder="Client" id="jobClient")
      <option value="" selected>Select a Client</option>
      for client in clients
        if job.jobClient && job.jobClient.equals(client._id)
          option(value=client._id selected="true") #{client.clientAbrv}
        else
          option(value=client._id) #{client.clientAbrv}
    label(for="jobRep") Rep
    select(class="block appearance-none w-full bg-gray-200 border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline" name="jobRep" placeholder="Rep" id="jobRep")
      <option value="" selected>Select a Rep</option>
      for rep in reps
        if job.jobRep && job.jobRep.equals(rep._id)
          option(value=rep._id selected="true") #{rep.repName}
        else
          option(value=rep._id ) #{rep.repName}
    label(for="jobMailDate") Mail Date
    input(class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:shadow-outline focus:bg-white shadow-lx" type="date" name="jobMailDate" value=h.moment(job.jobMailDate).format("YYYY-MM-DD"))
    label(for="jobMailingMethod") Mailing Method
    - const mailingOptions = ['Straight 1st', '1st Presort', 'Standard Rate', 'SCF', 'Non Profit', 'Midwest Commingle', 'PSI Commingle']
    - const methods = job.jobMailingMethod || []
    ul.tags
      each option in mailingOptions
        .tag.tag__choice.m-2
          input(type="checkbox" id=option value=option name="jobMailingMethod" checked=(methods.includes(option)))
          label(for=option) #{option}
    label(for="jobMatch") Match
    input(class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:shadow-outline focus:bg-white shadow-lx" type="number" name="jobMatch" value=job.jobMatch)
    label(for="jobQuantity") Mailing Quantity
    input(class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:shadow-outline focus:bg-white shadow-lx" type="number" name="jobQuantity" value=job.jobQuantity)
    label(for="jobSize") Mailing Package Size
    input(class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:shadow-outline focus:bg-white shadow-lx" type="text" name="jobSize" value=job.jobSize)
    label(for="jobTags") Mailing Options
    - const choices = ['Scitex', 'Meter', 'Labels', 'Self Mailer', 'Stamp', 'Indicia', 'Postcard', 'Cancelation']
    - const tags = job.jobTags || []
    ul.tags
      each choice in choices
        .tag.tag__choice.m-2
          input(type="checkbox" id=choice value=choice name="jobTags" checked=(tags.includes(choice)))
          label(for=choice) #{choice}
    label(for="jobNotes") Mailing Notes
    textarea(class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:shadow-outline focus:bg-white shadow-lx" name="jobNotes")=job.jobNotes
    p
    input(type="submit" value="Create Job -<", class="button")  