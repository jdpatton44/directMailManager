extends layout

block content
  .inner.py-8
    div(class="flex flex-col w-full bg-white rounded shadow-lg m-6")
      div(class="flex flex-col w-full md:flex-row")
        div(class="flex flex-row justify-around p-4 font-bold leading-none text-white uppercase bg-blue-400 rounded md:flex-col md:items-center md:justify-center md:w-1/4")
          div(class="md:text-5xl") #{h.moment(job.jobMailDate).add(9,"hours").format("MMMM")}
          div(class="md:text-6xl") #{h.moment(job.jobMailDate).add(9,"hours").format("DD")}
          div(class="md:text-4xl py-2") #{h.moment(job.jobMailDate).add(9,"hours").format("dddd")}
          
        div(class="p-4 font-normal text-gray-800 md:w-3/4")
          p(class="leading-normal font-bold text-3xl") #{job.jobName}
          p(class="leading-normal") Package Sizes - #{job.jobSize}
          p(class="leading-normal") #{job.jobTags} 
          div(class="flex flex-row items-center mt-4 text-black")
            - let quantity = job.jobQuantity;
            - (job.packages[0]) ? quantity = job.packages.reduce((t, { packageQuantity }) => t + packageQuantity, 0) :  quantity;
            div(class="w-1/2 ") #{quantity ? quantity.toLocaleString() : ''} Pieces
            div(class="w-1/2 flex justify-end") #{job.jobMailingMethod}

    div(class="flex flex-row justify-center")
      each p in job.packages
        div(class="rounded h-full flex flex-row justify-center items-center p-4 bg-gray-200")
          div(class="rounded bg-white shadow-md p-6 flex flex-col justify-around")
            div
              p(class="text-2xl text-orange-600")=p.packageName
            div 
              p(class="text-lg") Pkg Quantity
              p(class="text-2xl text-gray-700 font-bold")=p.packageQuantity.toLocaleString()
            div
              p(class="text-lg") Skids Shipped
              - const numSkids = skids.filter(s => s.skidPackage.equals(p._id))
              p(class="text-2xl text-gray-700 font-bold")=numSkids.length
            div 
              p(class="text-lg") Pieces Shipped
              - function sum(total, num) { return total + num }
              - const count = numSkids.map(s => s.skidCount).reduce(sum, 0)
              p(class="text-2xl text-gray-700 font-bold") #{count}
                span(class="text-lg") - (#{((count/p.packageQuantity) * 100).toFixed(2)}%)  
              
    

    div(class="flex flex-col w-full bg-white rounded shadow-lg m-6 p-4")
      div(class="flex flex-row justify-between")
        h1.text-5xl.py-2.m-2 ðŸšš Skids ðŸšš 
        a(class="w-1/5 px-2 mx-2" href=`/addSkid/${job._id}`) 
          button(class="bg-blue-500 hover:bg-blue-400 text-white font-bold py-4 px-6 border-b-4 border-blue-700 hover:border-blue-500 rounded m-6 w-3/4") Add a Skid
      div(class="flex flex-col w-full md:flex-row")
        table(class="text-left w-full border-collapse")
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Pick Up Date
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Package Name
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Weight
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") # of Trays
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Tare
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Count
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Initials
          th(class="py-4 px-6 bg-green-500 font-bold uppercase text-xl text-grey-dark border-b border-black text-center") Actions
          if (skids)
            each s in skids  
              tr(class="hover:bg-blue-200") 
                td(class="py-4 px-6 border-b border-grey-light text-center")= h.moment(s.skidShipDate).add(9,"hours").format("MM-DD-YY") 
                td(class="py-4 px-6 border-b border-grey-light text-center")= job.packages.find(p => p._id.equals(s.skidPackage)).packageName
                td(class="py-4 px-6 border-b border-grey-light text-center")= s.skidWeight
                td(class="py-4 px-6 border-b border-grey-light text-center")= s.skidTrays
                td(class="py-4 px-6 border-b border-grey-light text-center")= s.skidTare
                td(class="py-4 px-6 border-b border-grey-light text-center")= s.skidCount
                td(class="py-4 px-6 border-b border-grey-light text-center")= s.skidInitials
                td(class="py-4 px-6 border-b border-grey-light text-center") 
                  a(href=`/editskid/${s._id}`)
                    button(class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded m-1 w-full") Edit
                  a(href=`/deleteSkid/${job.jobSlug}/${s._id}` onclick="return confirm('Are you sure you want to delete this item?');")
                    button(class="bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded m-1 w-full") Delete